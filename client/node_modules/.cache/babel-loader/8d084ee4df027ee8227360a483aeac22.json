{"ast":null,"code":"import _classCallCheck from \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/Portfolio/portfolio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/Portfolio/portfolio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/Portfolio/portfolio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/Portfolio/portfolio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/Portfolio/portfolio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/Portfolio/portfolio/client/src/pages/Portfolio.js\";\nimport React, { Component } from 'react';\nimport Nav from \"../components/Nav\";\nimport PortfolioHeader from \"../components/PortfolioHeader\";\nimport PortfolioProject from \"../components/PortfolioProject\";\nimport { Row, Col } from \"react-materialize\";\nimport Projects from \"../utils/projects.js\";\nimport Masonry from 'react-masonry-component';\nimport InViewMonitor from \"react-inview-monitor\";\nvar masonryOptions = {\n  transitionDuration: 0\n};\n\nvar Portfolio =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Portfolio, _Component);\n\n  function Portfolio() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Portfolio);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Portfolio)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      projectArr: []\n    };\n    return _this;\n  }\n\n  _createClass(Portfolio, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // let myProjects = JSON.stringify(Projects)\n      this.setState({\n        projectArr: Projects\n      }, function () {\n        console.log(this.state.projectArr); // for (let i = 0; i < this.state.projectArr; i++) {\n        //   console.log(this.state.projectArr[i])\n        // }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var childElements = this.state.projectArr.map(function (project) {\n        return React.createElement(Col, {\n          s: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(InViewMonitor, {\n          classNameNotInView: \"vis-hidden\",\n          classNameInView: \"animated fadeInUpBig\",\n          intoViewMargin: \"5%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(PortfolioProject, {\n          projectData: project,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        })));\n      });\n      return React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        navItemColor: \"#eb774c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"container\",\n        style: {\n          marginTop: \"45vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Masonry, {\n        className: 'my-gallery-class' // default ''\n        ,\n        elementType: 'ul' // default 'div'\n        ,\n        options: masonryOptions // default {}\n        ,\n        disableImagesLoaded: false // default false\n        ,\n        updateOnEachImageLoad: false // default false and works only if disableImagesLoaded is false\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, childElements)));\n    }\n  }]);\n\n  return Portfolio;\n}(Component);\n\nexport { Portfolio as default };","map":{"version":3,"sources":["/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/Portfolio/portfolio/client/src/pages/Portfolio.js"],"names":["React","Component","Nav","PortfolioHeader","PortfolioProject","Row","Col","Projects","Masonry","InViewMonitor","masonryOptions","transitionDuration","Portfolio","state","projectArr","setState","console","log","childElements","map","project","marginTop"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,mBAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AAEA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,kBAAkB,EAAE;AADD,CAArB;;IAIqBC,S;;;;;;;;;;;;;;;;;UAUnBC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE;AADN,K;;;;;;wCAIY;AAElB;AAEA,WAAKC,QAAL,CAAc;AACZD,QAAAA,UAAU,EAAEP;AADA,OAAd,EAEG,YAAY;AACbS,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,UAAvB,EADa,CAEb;AACA;AACA;AACD,OAPD;AAQD;;;6BAEQ;AACP,UAAII,aAAa,GAAG,KAAKL,KAAL,CAAWC,UAAX,CAAsBK,GAAtB,CAA0B,UAAAC,OAAO;AAAA,eACnD,oBAAC,GAAD;AAAK,UAAA,CAAC,EAAE,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,aAAD;AACI,UAAA,kBAAkB,EAAC,YADvB;AAEI,UAAA,eAAe,EAAC,sBAFpB;AAGI,UAAA,cAAc,EAAC,IAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,gBAAD;AAAkB,UAAA,WAAW,EAAEA,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,CADA,CADmD;AAAA,OAAjC,CAApB;AAYA,aAEE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,YAAY,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AACE,QAAA,SAAS,EAAE,kBADb,CACiC;AADjC;AAEE,QAAA,WAAW,EAAE,IAFf,CAEqB;AAFrB;AAGE,QAAA,OAAO,EAAEX,cAHX,CAG2B;AAH3B;AAIE,QAAA,mBAAmB,EAAE,KAJvB,CAI8B;AAJ9B;AAKE,QAAA,qBAAqB,EAAE,KALzB,CAKgC;AALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGQ,aAPH,CADF,CAHF,CAFF;AAkBD;;;;EA3DoCjB,S;;SAAlBW,S","sourcesContent":["import React, { Component } from 'react'\nimport Nav from \"../components/Nav\";\nimport PortfolioHeader from \"../components/PortfolioHeader\"\nimport PortfolioProject from \"../components/PortfolioProject\"\nimport { Row, Col } from \"react-materialize\"\nimport Projects from \"../utils/projects.js\"\nimport Masonry from 'react-masonry-component';\nimport InViewMonitor from \"react-inview-monitor\"\n\nvar masonryOptions = {\n  transitionDuration: 0\n};\n\nexport default class Portfolio extends Component {\n\n  // constructor(props, context) {\n  //   super(props, context)\n  //   this.state = {\n  //     projects: [],\n  //     test: \"\"\n  //   }\n  // }\n\n  state = {\n    projectArr: []\n  }\n\n  componentDidMount() {\n\n    // let myProjects = JSON.stringify(Projects)\n\n    this.setState({\n      projectArr: Projects\n    }, function () {\n      console.log(this.state.projectArr)\n      // for (let i = 0; i < this.state.projectArr; i++) {\n      //   console.log(this.state.projectArr[i])\n      // }\n    })\n  }\n\n  render() {\n    let childElements = this.state.projectArr.map(project => (\n      <Col s={6}>\n      <InViewMonitor\n          classNameNotInView='vis-hidden'\n          classNameInView='animated fadeInUpBig'\n          intoViewMargin=\"5%\"\n        >\n        <PortfolioProject projectData={project} />\n      </InViewMonitor>\n      </Col>\n    ))\n\n    return (\n\n      <div className=\"\">\n        <Nav navItemColor=\"#eb774c\" />\n        {/* <PortfolioHeader /> */}\n        <Row className=\"container\" style={{ marginTop: \"45vh\" }}>\n          <Masonry\n            className={'my-gallery-class'} // default ''\n            elementType={'ul'} // default 'div'\n            options={masonryOptions} // default {}\n            disableImagesLoaded={false} // default false\n            updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\n          >\n            {childElements}\n          </Masonry>\n        </Row>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}