{"ast":null,"code":"import _classCallCheck from \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/Portfolio/portfolio/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/Portfolio/portfolio/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/Portfolio/portfolio/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/Portfolio/portfolio/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/Portfolio/portfolio/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/Portfolio/portfolio/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/Portfolio/portfolio/client/src/pages/Portfolio.js\";\nimport React, { Component } from 'react';\nimport Nav from \"../components/Nav\";\nimport PortfolioHeader from \"../components/PortfolioHeader\";\nimport PortfolioProject from \"../components/PortfolioProject\";\nimport { Row, Col } from \"react-materialize\";\nimport Projects from \"../utils/projects.js\";\nimport Foot from \"../components/Foot\";\nimport Masonry from 'react-masonry-component';\nimport InViewMonitor from \"react-inview-monitor\";\nimport ActionButton from \"../components/ActionButton\";\nimport $ from \"jquery\";\nimport \"./Portfolio.css\";\nvar masonryOptions = {\n  transitionDuration: 0\n};\n\nvar Portfolio =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Portfolio, _Component);\n\n  function Portfolio(props) {\n    var _this;\n\n    _classCallCheck(this, Portfolio);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Portfolio).call(this, props));\n    _this.state = {\n      projectArr: [],\n      navcolor: \"#eb774c\"\n    };\n    _this.handleScroll = _this.handleScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Portfolio, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('scroll', this.handleScroll); // let myProjects = JSON.stringify(Projects)\n\n      this.setState({\n        projectArr: Projects\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('scroll', this.handleScroll);\n    }\n  }, {\n    key: \"handleScroll\",\n    value: function handleScroll(event) {\n      var scroll = $(window).scrollTop(); // how many pixels you've scrolled\n\n      var os = $('#portfolio-header-img').offset().top; // pixels to the top of div1\n\n      var ht = $('#portfolio-header-img').height(); // height of div1 in pixels\n      // if you've scrolled further than the top of div1 plus it's height\n      // change the color. either by adding a class or setting a css property\n\n      if (scroll > os + ht - 100) {\n        $('.navbar').addClass('scroll-color');\n        $('.navbar-item').addClass('nav-item-scroll');\n        this.setState({\n          navcolor: \"white\"\n        });\n      } else {\n        $('.navbar').removeClass('scroll-color');\n        $('.navbar-item').removeClass('nav-item-scroll');\n        this.setState({\n          navcolor: \"#eb774c\"\n        });\n      }\n\n      var scrollText = $(window).scrollTop(); // how many pixels you've scrolled\n\n      var osText = $('#portfolio-header-text').offset().top; // pixels to the top of div1\n      //var ht = $('#header-text').height(); // height of div1 in pixels\n      // if you've scrolled further than the top of div1 plus it's height\n      // change the color. either by adding a class or setting a css property\n\n      if (scrollText > osText - (osText - 20)) {\n        $('#portfolio-header-text').addClass('portfolio-scroll-disappear');\n      } else {\n        $('#portfolio-header-text').removeClass('portfolio-scroll-disappear');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var childElements = this.state.projectArr.map(function (project) {\n        return React.createElement(Col, {\n          s: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(InViewMonitor, {\n          classNameNotInView: \"vis-hidden\",\n          classNameInView: \"animated fadeInUp\",\n          intoViewMargin: \"5%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(PortfolioProject, {\n          projectData: project,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        })));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        navItemColor: this.state.navcolor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(PortfolioHeader, {\n        className: \"portfolio-head-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"project-area\",\n        style: {\n          marginTop: \"38vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"animated bounceInLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"portfolio-quote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"\\\"Talk is cheap. Show me the code.\\\"\")), React.createElement(\"h5\", {\n        className: \"portfolio-quote-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"- Linus Torvalds\"))), React.createElement(Col, {\n        l: 10,\n        className: \"offset-l1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Masonry, {\n        className: 'my-gallery-class' // default ''\n        ,\n        elementType: 'ul' // default 'div'\n        ,\n        options: masonryOptions // default {}\n        ,\n        disableImagesLoaded: false // default false\n        ,\n        updateOnEachImageLoad: false // default false and works only if disableImagesLoaded is false\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, childElements))), React.createElement(ActionButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(Foot, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Portfolio;\n}(Component);\n\nexport { Portfolio as default };","map":{"version":3,"sources":["/Users/brysonnelson/Documents/UCSD-Coding-Bootcamp/Portfolio/portfolio/client/src/pages/Portfolio.js"],"names":["React","Component","Nav","PortfolioHeader","PortfolioProject","Row","Col","Projects","Foot","Masonry","InViewMonitor","ActionButton","$","masonryOptions","transitionDuration","Portfolio","props","state","projectArr","navcolor","handleScroll","bind","window","addEventListener","setState","removeEventListener","event","scroll","scrollTop","os","offset","top","ht","height","addClass","removeClass","scrollText","osText","childElements","map","project","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Nav from \"../components/Nav\";\nimport PortfolioHeader from \"../components/PortfolioHeader\"\nimport PortfolioProject from \"../components/PortfolioProject\"\nimport { Row, Col } from \"react-materialize\"\nimport Projects from \"../utils/projects.js\"\nimport Foot from \"../components/Foot\"\nimport Masonry from 'react-masonry-component';\nimport InViewMonitor from \"react-inview-monitor\"\nimport ActionButton from \"../components/ActionButton\"\nimport $ from \"jquery\"\nimport \"./Portfolio.css\"\n\nvar masonryOptions = {\n  transitionDuration: 0\n};\n\nexport default class Portfolio extends Component {\n\n  state = {\n    projectArr: [],\n    navcolor: \"#eb774c\"\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n    // let myProjects = JSON.stringify(Projects)\n\n    this.setState({\n      projectArr: Projects\n    })\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  };\n\n  handleScroll(event) {\n\n    var scroll = $(window).scrollTop(); // how many pixels you've scrolled\n    var os = $('#portfolio-header-img').offset().top; // pixels to the top of div1\n    var ht = $('#portfolio-header-img').height(); // height of div1 in pixels\n    // if you've scrolled further than the top of div1 plus it's height\n    // change the color. either by adding a class or setting a css property\n    if (scroll > os + ht - 100) {\n      $('.navbar').addClass('scroll-color');\n      $('.navbar-item').addClass('nav-item-scroll');\n      this.setState({\n        navcolor: \"white\"\n      })\n    } else {\n      $('.navbar').removeClass('scroll-color');\n      $('.navbar-item').removeClass('nav-item-scroll');\n      this.setState({\n        navcolor: \"#eb774c\"\n      })\n    }\n\n    var scrollText = $(window).scrollTop(); // how many pixels you've scrolled\n    var osText = $('#portfolio-header-text').offset().top; // pixels to the top of div1\n    //var ht = $('#header-text').height(); // height of div1 in pixels\n    // if you've scrolled further than the top of div1 plus it's height\n    // change the color. either by adding a class or setting a css property\n    if (scrollText > osText - (osText - 20)) {\n      $('#portfolio-header-text').addClass('portfolio-scroll-disappear');\n    } else {\n      $('#portfolio-header-text').removeClass('portfolio-scroll-disappear');\n    }\n  };\n\n\n\n\n\n  render() {\n    let childElements = this.state.projectArr.map(project => (\n      <Col s={4}>\n        <InViewMonitor\n          classNameNotInView='vis-hidden'\n          classNameInView='animated fadeInUp'\n          intoViewMargin=\"5%\"\n        >\n          <PortfolioProject projectData={project} />\n        </InViewMonitor>\n      </Col>\n    ))\n\n    return (\n\n      <div>\n        <Nav navItemColor={this.state.navcolor} />\n        <PortfolioHeader className=\"portfolio-head-area\" />\n        <Row className=\"project-area\" style={{ marginTop: \"38vh\" }}>\n          <div className=\"animated bounceInLeft\">\n            <h4 className=\"portfolio-quote\"><em>\"Talk is cheap. Show me the code.\"</em></h4>\n            <h5 className=\"portfolio-quote-1\"><b>- Linus Torvalds</b></h5>\n          </div>\n          <Col l={10} className=\"offset-l1\">\n            <Masonry\n              className={'my-gallery-class'} // default ''\n              elementType={'ul'} // default 'div'\n              options={masonryOptions} // default {}\n              disableImagesLoaded={false} // default false\n              updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\n            >\n              {childElements}\n            </Masonry>\n          </Col>\n        </Row>\n        <ActionButton />\n        <Foot />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}